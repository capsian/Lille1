/* tokens based on typographical marks and signs */
#define SIGNS                0
#define COLON                (SIGNS|1)
#define COMMA                (SIGNS|2)
#define SEMICOLON            (SIGNS|3)
#define FULL_STOP            (SIGNS|4)
#define PLUS                 (SIGNS|5)
#define MINUS                (SIGNS|6)
#define ASTERISK             (SIGNS|7)
/* #define CLOSE_COMMENT        (SIGNS|8) */
#define SLASH                (SIGNS|9)
/* #define OPEN_COMMENT         (SIGNS|10) */
/* #define BACKSLASH            (SIGNS|11) */
#define OPEN_PARENTHESIS     (SIGNS|12)
#define CLOSE_PARENTHESIS    (SIGNS|13)
#define OPEN_BRACKET         (SIGNS|14)
#define CLOSE_BRACKET        (SIGNS|15)
#define OPEN_BRACE           (SIGNS|16)
#define CLOSE_BRACE          (SIGNS|17)
#define ASSIGNMENT           (SIGNS|18)
#define EQUAL                (SIGNS|19)
#define LESS_THAN            (SIGNS|20)
#define LESS_OR_EQUAL        (SIGNS|21)
#define GREATER_THAN         (SIGNS|22)
#define GREATER_OR_EQUAL     (SIGNS|23)
#define AMPERSAND            (SIGNS|24)
#define PIPE                 (SIGNS|25)
#define CARET                (SIGNS|26)
#define EXCLAMATION_MARK     (SIGNS|27)
#define NOT_EQUAL            (SIGNS|28)
#define QUESTION_MARK        (SIGNS|29)
/* #define QUOTE                (SIGNS|30) */
/* #define DOUBLE_QUOTE         (SIGNS|31) */
/* #define AT                   (SIGNS|32) */
/* #define HASH                 (SIGNS|33) */
#define PERCENT              (SIGNS|34)
#define TILDE                (SIGNS|35)
/* #define SECTION_MARK         (SIGNS|36) */
#define INCREMENT            (SIGNS|37)
#define DECREMENT            (SIGNS|38)
#define EXPONENTIATION       (SIGNS|39)
#define SHIFT_LEFT           (SIGNS|40)
#define SHIFT_RIGHT          (SIGNS|41)
#define SHIFT_RIGHT_UNSIGNED (SIGNS|42)
#define STRICT_EQUAL         (SIGNS|43)
#define STRICT_NOT_EQUAL     (SIGNS|44)
#define LOGICAL_AND          (SIGNS|45)
#define LOGICAL_XOR          (SIGNS|46)
#define LOGICAL_OR           (SIGNS|47)
#define PLUS_ASSIGNMENT      (SIGNS|48)
#define MINUS_ASSIGNMENT     (SIGNS|49)
#define MUL_ASSIGNMENT       (SIGNS|50)
#define DIV_ASSIGNMENT       (SIGNS|51)
#define MOD_ASSIGNMENT       (SIGNS|52)
#define SHIFT_LEFT_ASSIGNMENT (SIGNS|53)
#define SHIFT_RIGHT_ASSIGNMENT (SIGNS|54)
#define SHIFT_RIGHT_UNSIGNED_ASSIGNMENT (SIGNS|55)
#define AND_ASSIGNMENT       (SIGNS|56)
#define XOR_ASSIGNMENT       (SIGNS|57)
#define OR_ASSIGNMENT        (SIGNS|58)
#define NOT_ASSIGNMENT       (SIGNS|59)
#define NB_SIGNS             59

/* tokens based on keywords */
#define KEYWORDS             64
#define FUNCTION             (KEYWORDS|1)
#define RETURN               (KEYWORDS|2)
#define VAR                  (KEYWORDS|3)
#define IF                   (KEYWORDS|4)
#define ELSE                 (KEYWORDS|5)
#define WHILE                (KEYWORDS|6)
#define FOR                  (KEYWORDS|7)
#define BREAK                (KEYWORDS|8)
#define CASE                 (KEYWORDS|9)
#define CATCH                (KEYWORDS|10)
#define CONTINUE             (KEYWORDS|11)
#define DEBUGGER             (KEYWORDS|12)
#define DEFAULT              (KEYWORDS|13)
#define DELETE               (KEYWORDS|14)
#define DO                   (KEYWORDS|15)
#define FALSE                (KEYWORDS|16)
#define FINALLY              (KEYWORDS|17)
#define IN                   (KEYWORDS|18)
#define INSTANCEOF           (KEYWORDS|19)
#define NEW                  (KEYWORDS|20)
#define NULL_TOKEN           (KEYWORDS|21)
#define SWITCH               (KEYWORDS|22)
#define THIS                 (KEYWORDS|23)
#define THROW                (KEYWORDS|24)
#define TRUE                 (KEYWORDS|25)
#define TRY                  (KEYWORDS|26)
#define TYPEOF               (KEYWORDS|27)
#define VOID                 (KEYWORDS|28)
#define WITH                 (KEYWORDS|29)
#define NB_KEYWORDS          29

/* valued tokens */
#define VALUED               128
#define IDENTIFIER           (VALUED|1)
#define INTEGER              (VALUED|2)
#define FLOAT                (VALUED|3)
#define STRING               (VALUED|4)
#define CHAR                 (VALUED|5)
#define BOOLEAN              (VALUED|6)
